# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import txnqueue_grpc_pb2 as txnqueue__grpc__pb2


class txnQueueInterfaceStub(object):
  """rpc definitions for the grpc services
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.setTxnInQueue = channel.unary_unary(
        '/txnQueueInterface.txnQueueInterface/setTxnInQueue',
        request_serializer=txnqueue__grpc__pb2.txndata.SerializeToString,
        response_deserializer=txnqueue__grpc__pb2.retmessage.FromString,
        )
    self.getTxnFromQueue = channel.unary_unary(
        '/txnQueueInterface.txnQueueInterface/getTxnFromQueue',
        request_serializer=txnqueue__grpc__pb2.txnrequest.SerializeToString,
        response_deserializer=txnqueue__grpc__pb2.txnresponse.FromString,
        )


class txnQueueInterfaceServicer(object):
  """rpc definitions for the grpc services
  """

  def setTxnInQueue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getTxnFromQueue(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_txnQueueInterfaceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'setTxnInQueue': grpc.unary_unary_rpc_method_handler(
          servicer.setTxnInQueue,
          request_deserializer=txnqueue__grpc__pb2.txndata.FromString,
          response_serializer=txnqueue__grpc__pb2.retmessage.SerializeToString,
      ),
      'getTxnFromQueue': grpc.unary_unary_rpc_method_handler(
          servicer.getTxnFromQueue,
          request_deserializer=txnqueue__grpc__pb2.txnrequest.FromString,
          response_serializer=txnqueue__grpc__pb2.txnresponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'txnQueueInterface.txnQueueInterface', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
